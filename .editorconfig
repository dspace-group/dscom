###############################
# Core EditorConfig Options   #
###############################
root = true
# All files
[*]
indent_style = space

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8
###############################
# .NET Coding Conventions     #
###############################
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true:suggestion
# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:suggestion
# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
###############################
# Naming Conventions          #
###############################
# Style Definitions
dotnet_style_qualification_for_field = false
dotnet_naming_style.instance_field_style.capitalization             = camel_case
dotnet_naming_style.instance_field_style.required_prefix            = _
dotnet_naming_style.instance_field_style.required_prefix.severity   = warning
dotnet_naming_style.pascal_case_style.capitalization                = pascal_case

# Define what we will treat as private fields.
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
# Define rule that something must begin with an underscore and be in camel case.
dotnet_naming_style.require_underscore_prefix_and_camel_case.required_prefix = _
dotnet_naming_style.require_underscore_prefix_and_camel_case.capitalization = camel_case
# Appy our rule to private fields.
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.style = require_underscore_prefix_and_camel_case
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.severity = warning

# Use PascalCase for constant fields  
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds            = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities  = *
dotnet_naming_symbols.constant_fields.required_modifiers          = const
###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
# Namespace
csharp_style_namespace_declarations = file_scoped:suggestion
# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
# Expression-level preferences
csharp_prefer_braces = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
###############################
# C# dotnet_diagnostic        #
###############################
# https://docs.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2022

dotnet_analyzer_diagnostic.severity = warning

dotnet_diagnostic.IDE0058.severity = none       # Remove unnecessary expression value
dotnet_diagnostic.IDE0046.severity = none       # Use conditional expression for return
dotnet_diagnostic.IDE0130.severity = none       # Namespace match folder structure
dotnet_diagnostic.IDE0072.severity = none       # Populate switch
dotnet_diagnostic.IDE0010.severity = none       # Populate switch
dotnet_diagnostic.IDE0057.severity = none       # Substring can be simplified
dotnet_diagnostic.IDE0056.severity = none       # Substring can be simplified
dotnet_diagnostic.IDE0066.severity = none       # Use switch expression

dotnet_diagnostic.CA1401.severity = none        # P/Invoke method should not be visible
dotnet_diagnostic.CA1707.severity = none        # Remove the underscores from member name
dotnet_diagnostic.CA1720.severity = none        # Identifiers should not contain type names
dotnet_diagnostic.CA1711.severity = none        # Identifiers should not have incorrect suffix
dotnet_diagnostic.CA2201.severity = none        # Do not raise reserved exception types
dotnet_diagnostic.CA1200.severity = none        # Avoid using cref tags with a prefix
dotnet_diagnostic.CA5351.severity = none        # Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CS0618.severity = none        # Obsolete
dotnet_diagnostic.CA1305.severity = none        # CultureInfo
dotnet_diagnostic.CA1837.severity = none        # Use Environment.ProcessId instead of Process.GetCurrentProcess().Id


# new warnings introduced by .NET 8 targets 

dotnet_diagnostic.SYSLIB1054.severity = none    # Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time
dotnet_diagnostic.SYSLIB1096.severity = none    # Convert to 'GeneratedComInterface'

dotnet_diagnostic.CA1510.severity = none        # Use ArgumentNullException throw helper
dotnet_diagnostic.CA1513.severity = none        # Use ObjectDisposedException throw helper
dotnet_diagnostic.CA1850.severity = none        # Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1859.severity = none        # Use concrete types when possible for improved performance
dotnet_diagnostic.CA1861.severity = none        # Avoid constant arrays as arguments

dotnet_diagnostic.CS1574.severity = none        # XML comment has cref attribute that could not be resolved

dotnet_diagnostic.IDE0251.severity = none       # Make member 'readonly'

dotnet_diagnostic.xUnit1012.severity = none       # Make member 'readonly'